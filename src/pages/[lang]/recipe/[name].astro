---
import IngredientList from "../../../components/ingredients/IngredientList.astro";
import {getCollection, type CollectionEntry} from 'astro:content';

export async function getStaticPaths() {
  const recipes = await getCollection('recipes')

  return recipes
    .filter(recipe => recipe.data.isPublic)
    .map((it) => {
      const [lang, ...slug] = it.slug.split('/')
      return {
        params: {
          lang,
          slug: slug.join('/') || undefined,
          name: it.data.id,
        },
        props: {
          recipe: it,
        },
      }
    })
}
interface Props {
  recipe: CollectionEntry<'recipes'>
}

const {recipe} = Astro.props

import Layout from "../../../layouts/Layout.astro";
import Steps from "../../../components/Steps.astro";
import ContentBox from "../../../components/ContentBox.astro";
import RecipeMetaData from "../../../components/RecipeMetaData.astro";
import {Astro} from "astro/env";
---
<Layout title={recipe.data.name} description={recipe.data.description}>
  <ContentBox class="title"><h1>{recipe.data.name}</h1></ContentBox>
  <img class="header-image image" src={import.meta.env.BASE_URL + "/" + recipe.data.image.src}
       alt={recipe.data.image.alt}>
  <RecipeMetaData metaInformation={recipe.data.metaInformation}/>
  <p>{recipe.data.description}</p>
  <IngredientList ingredientGroups={recipe.data.ingredientGroups}/>
  <Steps steps={recipe.data.steps}/>
</Layout>

<style>
  .title {
    background: var(--pink);
    color: var(--red);
    margin-bottom: 0;
    padding: 20px;

    h1 {
      padding: 0;
      margin: 0;
      @media screen and (max-width: 800px) {
        font-size: 2em;
      }
    }
  }

  .header-image {
    display: block;
    width: 100%;
    padding: 0;
    aspect-ratio: 16 / 9;
    object-fit: cover;
  }
</style>